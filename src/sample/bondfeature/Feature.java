package sample.bondfeature;

import sample.bondfeature.FeatureProcessor.FeatureType;
import sample.tree.JDBinomialNode;

public interface Feature {

	/**
	 * The implementation of this method is responsible for determining if the particular feature applies to the bond
	 * at the node specified (ex: does the Node fall in a time period where a call by the issuer is permitted?) 
	 * 
	 * @param node The Binomial Node object, which contain information regarding the Bond and the time-step
	 * @return The Dollar Value of Applying the Feature at the Specific Node (i.e. a Call/Put)
	 */
	public double featureValue(JDBinomialNode node);
	
	/**
	 * Returns true if the value returned by featureValue is forced (such as a call)
	 * In cases where the feature is forced, such as a call, the Node can no longer continue and either a forced conversion
	 * takes place or the dollar amount generated by featureValue() is used as the node's return value
	 * 
	 * @param node
	 * @return Whether the specific feature is forced
	 */
	public boolean isForced(JDBinomialNode node);
	
	/**
	 * Returns the Feature's Name
	 * @return A String representing the feature's name
	 */
	public String getFeatureName();
	
	/**
	 * Returns the Feature's Name as a instance of the FeatureList Enum
	 * @return A instance of the FeataureList Enum
	 */
	public FeatureType getFeatureEnum();
}
